<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function($scope, spUtil) {
  /* widget controller */
  var c = this;
	
	spUtil.recordWatch($scope, "x_1093586_messages_messages", "numberANYTHING",
		function(name){
			if(name.data.operation == "insert"){
				c.server.refresh();
			}
	});
	
};]]></client_script>
        <controller_as>c</controller_as>
        <css>#from {
  padding: 10px;
  width: fit-content;
  color: black;
}

#message {
	padding: 8px;
  width: fit-content;
  background-color: lightgreen;
  color: black;
  border-radius: 20px;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>messages_list</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Messages List</name>
        <option_schema>[{"name":"message_type","section":"other","default_value":"unread","label":"Message type","type":"choice","choices":[{"label":"unread","value":"unread"},{"label":"read","value":"read"},{"label":"sent","value":"sent"}]}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
	data.messages = [];
	var messageGR = new GlideRecord('x_1093586_messages_messages');
	if(options.message_type == "unread"){
		options.title = "Unread Messages";
		/*Return records where
			'receiver' is this user,
			'seen' field is empty.*/
		messageGR.addQuery('receiver','=',gs.getUserID());
		messageGR.addNullQuery('seen');
	}else if(options.message_type == "read"){
		options.title = "Read Messages";
		/*Return records where:
		'receiver' field is this user
		'seen' field is not empty.*/
		messageGR.addQuery('receiver','=',gs.getUserID());
		messageGR.addNotNullQuery('seen');
	}else if(options.message_type == "sent"){
		options.title = "Sent Messages";
		/*Return records where
		'sender' field is this user.*/
		messageGR.addQuery('sender','=',gs.getUserID());
	}
	messageGR.orderByDesc('sent');
	messageGR.query();
	
	while(messageGR.next()){
		var messageObj = {};
		$sp.getRecordDisplayValues(messageObj, messageGR, 'number,sender,receiver,sent,seen');
		messageObj.message = messageGR.getValue('message');
		data.messages.push(messageObj);
	}
	
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-08-04 10:42:23</sys_created_on>
        <sys_id>9821d980c3e8f110bfdd53beb0013147</sys_id>
        <sys_mod_count>66</sys_mod_count>
        <sys_name>Messages List</sys_name>
        <sys_package display_value="Messages" source="x_1093586_messages">ef80693fc31cb110bfdd53beb00131c2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Messages">ef80693fc31cb110bfdd53beb00131c2</sys_scope>
        <sys_update_name>sp_widget_9821d980c3e8f110bfdd53beb0013147</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-08-04 13:33:43</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default">
  <div class="panel-heading">
    <div class="panel-title">
      {{::c.options.title}}
    </div>
  </div>
  <div class="panel-body">
    <ul class="list-group">
      <li class="list-group-item" ng-repeat="messageObj in data.messages">
        <div id="from">
        	{{messageObj.sender}}
        </div>
        <div id="message">
        	{{messageObj.message}}
        </div>
      </li>
    </ul>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
