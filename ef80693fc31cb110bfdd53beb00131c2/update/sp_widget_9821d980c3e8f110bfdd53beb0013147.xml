<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function($scope, spUtil) {
	/* widget controller */
	var c = this;

	spUtil.recordWatch($scope, "x_1093586_messages_messages", "numberANYTHING",
	function(name){
		if(name.data.operation == "insert"){
			c.server.refresh();
		}else if(name.data.operation == "delete"){
			c.server.refresh();
		}else if(name.data.operation == "update"){
			c.server.refresh();
		}
	});
	
	c.deleteMessage = function(index) {
		c.server.get(
		{
			'action': 'deleteMessage',
			'sys_id': c.data.messages[index].sys_id
		}).then(function(r) {
			
		});
	};
	
	c.readMessage = function(index) {
		c.server.get(
		{
			'action': 'readMessage',
			'sys_id': c.data.messages[index].sys_id
		}).then(function(r) {
			c.server.refresh();
		});
	};
};]]></client_script>
        <controller_as>c</controller_as>
        <css>.panel {
  border: none;
}

.panel-heading {
	text-align: center;
  border: none;
  background-color: transparent;
}

.panel-body {
  max-height: 50vh;
  overflow-y: auto;
	background-color: transparent;
  //border: none;
  scrollbar-width: none;
}

.panel-body::-webkit-scrollbar {
  display: none;
}

.list-group-item {
	margin-bottom: 2%;
  border-radius: 2vh;
}

.message-top {
  display: flex;
  align-items: center;
  margin-bottom: 2%;
}

.message-avatar {
 	margin-right: 2%;
  cursor: default;
}

.message-name {
  font-weight: bold;
}

.message-date {
	color: grey;
}

.message-body {
	padding: 2%;
  overflow-wrap: break-word;
  max-width: 100%;
  width: fit-content;
  background-color: lightgreen;
  border-radius: 2vh;
  color: black;
}

.message-time {
	color: grey;
  font-size: 12px;
  text-align: right;
}

.list-group-item:hover .controls {
	display: block;
}

.controls {
  margin-top: 2%;
  display: none;
}

</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>messages_list</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Messages List</name>
        <option_schema>[{"name":"message_type","section":"other","default_value":"unread","label":"Message type","type":"choice","choices":[{"label":"unread","value":"unread"},{"label":"read","value":"read"},{"label":"sent","value":"sent"}]}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	/* populate the 'data' object */
	/* e.g., data.table = $sp.getValue('table'); */	
	
	data.messages = [];
	var messageGR = new GlideRecord('x_1093586_messages_messages');
	if(options.message_type == "unread"){
		options.title = "Unread Messages";
		/*Return records where
			'receiver' is this user,
			'seen' field is empty.*/
		messageGR.addQuery('receiver','=',gs.getUserID());
		messageGR.addNullQuery('seen');
	}else if(options.message_type == "read"){
		options.title = "Read Messages";
		/*Return records where:
		'receiver' field is this user
		'seen' field is not empty.*/
		messageGR.addQuery('receiver','=',gs.getUserID());
		messageGR.addNotNullQuery('seen');
	}else if(options.message_type == "sent"){
		options.title = "Sent Messages";
		/*Return records where
		'sender' field is this user.*/
		messageGR.addQuery('sender','=',gs.getUserID());
	}
	messageGR.orderByDesc('sent');
	messageGR.query();

	while(messageGR.next()){
		var messageObj = {};
		$sp.getRecordDisplayValues(messageObj, messageGR, 'number,sender,receiver,sent,seen');
		var sentGDT = new GlideDateTime(messageObj.sent);
		var sentGD = sentGDT.getDate();
		var sentGT = sentGDT.getTime();
		var date = sentGD.getByFormat('EE, dd.MM.yy');
		var time = sentGT.getByFormat("HH:mm");
		messageObj.sent = date + "#" + time;
		//console.log(messageObj.sent);
		messageObj.message = messageGR.getValue('message');
		messageObj.sys_id = messageGR.sys_id.toString();
		
		//Get the avatar link
		messageObj.avatarPicture = "";

		var userGR = new GlideRecord("sys_user");
		if(userGR.get(options.message_type == 'sent' ? messageObj.receiver : messageObj.sender)){
			var avatarPicture = userGR.avatar.replace("?t=small", "");
			messageObj.avatar = {
				'background-image': "url('" + avatarPicture + ".iix')",
				'color': 'transparent'
			};
		}

		data.messages.push(messageObj);
	}
	
	if(input){
		if(input.action == "deleteMessage"){
			var deleteGR = new GlideRecord("x_1093586_messages_messages");
			deleteGR.get(input.sys_id);
			deleteGR.deleteRecord();
		}else if(input.action == "readMessage"){
			var deleteGR = new GlideRecord("x_1093586_messages_messages");
			deleteGR.get(input.sys_id);
			var now = new GlideDateTime();
			deleteGR.setValue('seen', now);
			deleteGR.update();
		}
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-08-04 10:42:23</sys_created_on>
        <sys_id>9821d980c3e8f110bfdd53beb0013147</sys_id>
        <sys_mod_count>371</sys_mod_count>
        <sys_name>Messages List</sys_name>
        <sys_package display_value="Messages" source="x_1093586_messages">ef80693fc31cb110bfdd53beb00131c2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Messages">ef80693fc31cb110bfdd53beb00131c2</sys_scope>
        <sys_update_name>sp_widget_9821d980c3e8f110bfdd53beb0013147</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-08-08 19:02:08</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default">
  <div class="panel-heading">
    <div class="panel-title">
      {{::c.options.title}}
    </div>
  </div>
  <div class="panel-body">
    <ul class="list-group">
      <li class="list-group-item" ng-repeat="messageObj in data.messages">
        <div class="message-top">
          <div class="message-avatar avatar-medium avatar-container">
            <div class="avatar soloAvatar bottom">
              <div class="sub-avatar mia" ng-style="{{messageObj.avatar}}"><i class="fa fa-user"></i>
              </div>
            </div>
          </div>
          <div class="message-name">
            {{::c.options.message_type == 'sent' ? messageObj.receiver : messageObj.sender}}
          </div>
          &nbsp;on&nbsp;
          <div class="message-date">
            {{messageObj.sent.split("#")[0]}}
          </div>
        </div>
        <div class="message-body">
          <div class="message-text">
            {{messageObj.message}}
          </div>
          <div class="message-time">
            <span>{{messageObj.sent.split("#")[1]}}</span>
          </div>
        </div>
        <div class="controls">
          <div class="row">
            <div class="col-xs-2 col-xs-offset-4 col-sm-2 col-sm-offset-4 col-lg-2 col-lg-offset-4">
              <button type="button" class="btn" ng-click="c.readMessage($index)">
                <i class="fa fa-check"></i>
              </button>
            </div>
            <div class="col-xs-2 col-sm-2 col-lg-2">
              <button type="button" class="btn" ng-click="c.deleteMessage($index)">
                <i class="fa fa-trash"></i>
              </button>
            </div>
          </div>
        </div>
      </li>
    </ul>
  </div>
</div>
]]></template>
    </sp_widget>
</record_update>
